{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rovel\\\\Documents\\\\Cursos\\\\WEB DEV\\\\finalProject smartBrainFaceRecognition\\\\facerecognitionapp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport { Navigation, Logo, ImageLinkForm, Rank, FaceRecognition, SignIn, Register } from './Imports';\nimport './App.css';\nimport Clarifai from 'clarifai'; // creating an instanciation of the Clarifai object imported\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'fcd3c135178c4f1980cfb9beac698cdd'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 40,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n      console.log('id', data.id);\n    };\n\n    this.calculateArrayOfFacesBox = dataReceived => {\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      const arrayOfLocs = dataReceived.outputs[0].data.regions.map(region => {\n        let currentRegion = region.region_info.bounding_box;\n        return {\n          leftCol: currentRegion.left_col * width,\n          topRow: currentRegion.top_row * height,\n          rightCol: width - currentRegion.right_col * width,\n          bottomRow: height - currentRegion.bottom_row * height\n        };\n      });\n      return arrayOfLocs;\n    };\n\n    this.displayFaceBoxes = faceBoxObjectArray => {\n      this.setState({\n        boxes: faceBoxObjectArray\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = event => {\n      event.preventDefault(); // this.setState({imageURL: this.state.input})\n\n      Object.assign(this.state.user, {\n        imageURL: this.state.input\n      });\n      const idToUse = this.state.user.id;\n      console.log(idToUse);\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input) //if instead of typing this.state.input I would have typed this.state.imageURL, I would have gotten an error\n      // request failed\n      // .then(response => this.displayFaceBox(this.calculateFaceBox(response)))\n      .then(response => {\n        if (response) {\n          // i want to increase the amount of entries\n          // by sending a request to the backend\n          // im telling that i entered an image\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: idToUse\n            })\n          }) // the response is transformed to json\n          .then(res => {\n            res.json();\n            console.log(res);\n          }) // then i reassign the value of entries\n          .then(count => {\n            console.log(count);\n            this.setState( // i only want to modify a property\n            // not all of them\n            Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBoxes(this.calculateArrayOfFacesBox(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageURL: '',\n      boxes: [],\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const staticParts = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange,\n        isSignedIn: this.state.isSignedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 3\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [staticParts, this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          userName: this.state.user.name,\n          userEntries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          boxes: this.state.boxes,\n          imageURL: this.state.imageURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 10\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/rovel/Documents/Cursos/WEB DEV/finalProject smartBrainFaceRecognition/facerecognitionapp/src/App.js"],"names":["React","Component","Particles","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","SignIn","Register","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","joined","console","log","calculateArrayOfFacesBox","dataReceived","image","document","getElementById","width","Number","height","arrayOfLocs","outputs","regions","map","region","currentRegion","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBoxes","faceBoxObjectArray","boxes","onInputChange","event","input","target","onButtonSubmit","preventDefault","Object","assign","state","imageURL","idToUse","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","res","json","count","catch","err","onRouteChange","route","isSignedIn","render","staticParts"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Particles from 'react-particles-js';\r\nimport {Navigation, \r\n\t\tLogo, \r\n\t\tImageLinkForm, \r\n\t\tRank, \r\n\t\tFaceRecognition,\r\n\t\tSignIn,\r\n\t\tRegister,\r\n\t} from './Imports';\r\nimport './App.css';\r\nimport Clarifai from 'clarifai';\r\n\r\n// creating an instanciation of the Clarifai object imported\r\nconst app = new Clarifai.App({\r\n apiKey: 'fcd3c135178c4f1980cfb9beac698cdd'\r\n});\r\n\r\n\r\n\r\nconst particlesOptions = {\r\nparticles: {\r\n\tnumber: {\r\n\t\tvalue:40,\r\n\t\tdensity: {\r\n\t\t\tenable:true,\r\n\t\t\tvalue_area: 800\r\n\t\t}\r\n\t}\r\n}\r\n}\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tinput:'',\r\n\t\t\timageURL:'',\r\n\t\t\tboxes: [],\r\n\t\t\troute: 'signin',\r\n\t\t\tisSignedIn: false,\r\n\t\t\tuser: {\r\n\t\t\t\tid:'',\r\n\t\t\t\tname: '',\r\n\t\t\t\temail: '',\r\n\t\t\t\tentries: 0,\r\n\t\t\t\tjoined: ''\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tloadUser = (data) => {\r\n\t\tthis.setState({user: {\r\n\t\t\tid: data.id,\r\n\t\t\tname: data.name,\r\n\t\t\temail: data.email,\r\n\t\t\tentries: data.entries,\r\n\t\t\tjoined: data.joined\r\n\t\t}})\r\n\t\tconsole.log('id', data.id)\r\n\t}\r\n\r\n\tcalculateArrayOfFacesBox = (dataReceived) =>{\r\n\t\tconst image = document.getElementById('inputImage');\r\n\t\tconst width = Number(image.width);\r\n\t\tconst height = Number(image.height);\r\n\r\n\t\tconst arrayOfLocs = \r\n\t\t\tdataReceived.outputs[0].data.regions.map(region =>{\r\n\t\t\t\tlet currentRegion = region.region_info.bounding_box;\r\n\t\t\t\treturn {\r\n\t\t\t\t\tleftCol: currentRegion.left_col * width,\r\n\t\t\t\t\ttopRow: currentRegion.top_row *height,\r\n\t\t\t\t\trightCol: width - (currentRegion.right_col * width),\r\n\t\t\t\t\tbottomRow: height - (currentRegion.bottom_row * height)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\treturn arrayOfLocs;\r\n\t}\r\n\r\n\r\n\tdisplayFaceBoxes = (faceBoxObjectArray) => {\r\n\t\tthis.setState({boxes: faceBoxObjectArray});\r\n\t}\r\n\r\n\tonInputChange = (event) => {\r\n\t\tthis.setState({input: event.target.value})\r\n\t}\r\n\r\n\tonButtonSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\t// this.setState({imageURL: this.state.input})\r\n\t\tObject.assign(this.state.user, {imageURL: this.state.input})\r\n\t\tconst idToUse = this.state.user.id\r\n\t\tconsole.log(idToUse)\r\n\t\t\r\n\t\tapp.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\r\n\t\t\t//if instead of typing this.state.input I would have typed this.state.imageURL, I would have gotten an error\r\n\t\t\t// request failed\r\n\t\t\t// .then(response => this.displayFaceBox(this.calculateFaceBox(response)))\r\n\t\t\t.then(response => {\r\n\t\t\t\tif(response){\r\n\t\t\t\t    \r\n\t\t\t\t    // i want to increase the amount of entries\r\n\t\t\t\t    // by sending a request to the backend\r\n\t\t\t\t    // im telling that i entered an image\r\n\t\t\t\t    fetch('http://localhost:3000/image', {\r\n\t\t\t\t      method: 'put',\r\n\t\t\t\t      headers: {'Content-Type': 'application/json'},\r\n\t\t\t\t      body: JSON.stringify({\r\n\t\t\t\t        id: idToUse\r\n\t\t\t\t      })\r\n\t\t\t\t    })\r\n\t\t\t\t    // the response is transformed to json\r\n\t\t\t\t    .then(res => {\t\r\n\t\t\t\t    \tres.json()\r\n\t\t\t\t    \tconsole.log(res)\r\n\t\t\t\t    })\r\n\t\t\t\t    // then i reassign the value of entries\r\n\t\t\t\t    .then(count => {\r\n\t\t\t\t    \tconsole.log(count)\r\n\t\t\t\t    \tthis.setState(\r\n\t\t\t\t    \t\t// i only want to modify a property\r\n\t\t\t\t    \t\t// not all of them\r\n\t\t\t\t    \t\tObject.assign(this.state.user, {entries: count}))\r\n\t\t\t\t    })\r\n\t\t\t\t}\r\n\t\t\t\tthis.displayFaceBoxes(\r\n\t\t\t\t\tthis.calculateArrayOfFacesBox(response))\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err));\r\n\t}\r\n\r\n\tonRouteChange = (route) => {\r\n\t\tif (route === 'signout'){\r\n\t\t\tthis.setState({isSignedIn: false});\r\n\t\t} else if (route === 'home') {\r\n\t\t\tthis.setState({isSignedIn: true});\r\n\t\t}\r\n\t\tthis.setState({route: route});\r\n\t}\r\n\r\n\trender(){\r\n\tconst staticParts = (\r\n\t\t<div>\r\n\t\t\t<Particles className='particles' params={particlesOptions}/>\r\n\t    \t<Navigation onRouteChange={this.onRouteChange} \r\n\t    \t\tisSignedIn = {this.state.isSignedIn}/>\r\n\t    </div>\r\n\t)\r\n\treturn (\r\n\t    <div className=\"App\">\r\n\t    \t{staticParts}\r\n\r\n\t    \t{ this.state.route === 'home'\r\n\t    \t\t? <div>\r\n\t\t\t\t\t<Logo />\r\n\t\t\t\t\t<Rank \r\n\t\t\t\t\t\tuserName={this.state.user.name}\r\n\t\t\t\t\t\tuserEntries={this.state.user.entries}\r\n\t\t\t\t\t\t/>\r\n\t\t\t    \t<ImageLinkForm \r\n\t\t\t    \t\tonInputChange = {this.onInputChange}\r\n\t\t\t    \t\tonButtonSubmit = {this.onButtonSubmit}\r\n\t\t\t    \t/> \r\n\t\t\t    \t<FaceRecognition \r\n\t\t\t    \t\tboxes={this.state.boxes} \r\n\t\t\t    \t\timageURL={this.state.imageURL}\r\n\t\t\t    \t/>\r\n\t\t\t      </div>\r\n\t    \t\t: ( this.state.route === 'signin'\r\n\t    \t\t\t? <SignIn \r\n\t    \t\t\t\t\t\tloadUser={this.loadUser}\r\n\t    \t\t\t\t\t\tonRouteChange={this.onRouteChange}/>\r\n\t    \t\t\t: <Register \r\n\t    \t\t\t\t\t\tloadUser={this.loadUser}\r\n\t    \t\t\t\t\t\tonRouteChange={this.onRouteChange}/>\r\n\t    \t\t  )\r\n\t\t    }\r\n\r\n\t    </div>\r\n\t  );\r\n\t }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}